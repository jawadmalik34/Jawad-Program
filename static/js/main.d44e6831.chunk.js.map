{"version":3,"sources":["Componets/card/card.componets.jsx","Componets/card-list/card-list.componets.jsx","Componets/search-box/search-box.componets.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","car","id","username","email","CardList","cars","map","Searchbox","placehloder","changehandler","type","placeholder","onChange","App","e","setState","SearchFeild","target","value","state","fetch","then","response","json","users","this","filteredCars","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACK,qBAAKC,IAAK,MACRC,IAAG,+BAA2BH,EAAMI,IAAIC,GAArC,6BAEL,mCAAML,EAAMI,IAAIE,SAAhB,OACA,mCAAMN,EAAMI,IAAIG,MAAhB,WCJIC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,WAAf,SACHD,EAAMS,KAAKC,KAAI,SAAAN,GAAG,OACT,cAAC,EAAD,CAAmBA,IAAKA,GAAbA,EAAIC,UCLnBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,cAAhB,OACrB,uBACIZ,UAAY,SACZa,KAAK,SACLC,YAAeH,EACfI,SAAWH,MC8BJI,E,kDAjCb,aAAe,IAAD,8BACZ,gBAaFJ,cAAgB,SAAAK,GACd,EAAKC,SAAU,CAACC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,KAAK,GACLW,YAAa,IAJH,E,qDAQd,WACC,IAAD,OACEI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,KAAMmB,S,oBAKtC,WAAS,IAAD,EACuBC,KAAKN,MAA1Bd,EADF,EACEA,KAAMW,EADR,EACQA,YACRU,EAAerB,EAAKsB,QAAO,SAAA3B,GAAG,OAClCA,EAAIE,SAAS0B,cAAcC,SAASb,EAAYY,kBAClD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACIW,YAAa,kBACbC,cAAiBgB,KAAKhB,gBAE1B,cAAC,EAAD,CAAUJ,KAAQqB,W,GA7BRI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d44e6831.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className = 'card-container'>\r\n         <img alt= \"car\" \r\n           src= {`https://robohash.org/${props.car.id}?set=set2 &size=180x180`}   \r\n          />\r\n         <h2> {props.car.username} </h2>\r\n         <h3> {props.car.email} </h3>\r\n    </div>\r\n)\r\n","import React from 'react';\r\n\r\nimport './card-list.style.css';\r\n\r\nimport { Card } from '../card/card.componets';\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='cardlist'> \r\n      { props.cars.map(car => (\r\n                 <Card key={car.id} car={car}/>))}\r\n\r\n    </div>;\r\n};","import React from 'react'\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const Searchbox = ({placehloder , changehandler}) => (\r\n    <input\r\n        className = 'Search'\r\n        type='search'\r\n        placeholder = {placehloder}\r\n        onChange= {changehandler}\r\n    />\r\n);","import React from 'react';\nimport './App.css';\nimport { CardList } from './Componets/card-list/card-list.componets';\nimport { Searchbox } from './Componets/search-box/search-box.componets';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cars:[],\n      SearchFeild: '',\n    };\n\n  }\n  componentDidMount()\n  {\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({cars: users}));\n  }\n  changehandler = e => {\n    this.setState( {SearchFeild: e.target.value})\n  }\n  render(){\n    const { cars, SearchFeild } =this.state;\n    const filteredCars = cars.filter(car => \n      car.username.toLowerCase().includes(SearchFeild.toLowerCase()));\n    return (\n      <div className=\"App\">  \n        <h1> Monster Roldex </h1>\n        <Searchbox\n            placehloder= 'search monsters'\n            changehandler= { this.changehandler}\n        />\n        <CardList cars = {filteredCars} />         \n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}